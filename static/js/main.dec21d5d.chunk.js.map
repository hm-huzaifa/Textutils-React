{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","onClick","toggleMoonlitMode","htmlFor","toggleDarkMode","TextForm","useState","text","setText","btnStyleEven","color","darkMode","moonlitMode","backgroundColor","border","btnStyleOdd","style","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","textArr","split","i","length","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","newtext","defaultProps","aboutText","Alert","alert","role","word","lower","capitalize","message","App","setDarkMode","setMoonlitMode","setAert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dec21d5d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-secondary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch mx-2 text-light\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMoonlitMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Moonlit Astroid Mode\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check form-switch mx-2 text-light\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleDarkMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpper = () => {\r\n    // console.log(\"'Convert to UpperCase' clicked on \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  };\r\n  const handleLower = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  };\r\n\r\n  // Capitalizing the Text\r\n  const handleCap = () => {\r\n    const textArr = text.toLowerCase().split(\". \");\r\n    for (var i = 0; i < textArr.length; i++) {\r\n      textArr[i] = textArr[i].charAt(0).toUpperCase() + textArr[i].slice(1);\r\n    }\r\n    const newText = textArr.join(\". \");\r\n    setText(newText);\r\n    props.showAlert(\"Text has been Capitalized...!\", \"success\");\r\n  };\r\n\r\n  // Coping Text\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard...!\", \"success\");\r\n  };\r\n\r\n  // Handling extra spaces\r\n  const handleExtraSpaces = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"));\r\n    props.showAlert(\"Extra Spaces has been Removed...!!\", \"success\");\r\n  };\r\n\r\n  // Clearing Text\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"TEXT CLEARED...!!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"OnChange\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"Changing Text\"; // Wrong way to change the state\r\n  //   setText(\"Changing Text\"); // Correct way to cha ge the state\r\n\r\n  const btnStyleEven = {\r\n    color:\r\n      props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n        ? \"#141E30\"\r\n        : \"#d7d2cc\",\r\n    backgroundColor:\r\n      props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n        ? \"#d7d2cc\"\r\n        : \"#304352\",\r\n    border: \"none\",\r\n  };\r\n  const btnStyleOdd = {\r\n    color:\r\n      props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n        ? \"#d7d2cc\"\r\n        : \"#141E30\",\r\n    backgroundColor:\r\n      props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n        ? \"#141E30\"\r\n        : \"#d7d2cc\",\r\n    border: \"none\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color:\r\n            props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n              ? \"white\"\r\n              : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor:\r\n                props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n                  ? \"#414345\"\r\n                  : \"white\",\r\n              color: props.darkMode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-dark mx-2\"\r\n          style={btnStyleOdd}\r\n          onClick={handleUpper}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-2\"\r\n          style={btnStyleEven}\r\n          onClick={handleLower}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-dark mx-2\"\r\n          style={btnStyleOdd}\r\n          onClick={handleCap}\r\n        >\r\n          Capitalize Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-2\"\r\n          style={btnStyleEven}\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-dark mx-2\"\r\n          style={btnStyleOdd}\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger mx-2\"\r\n          style={btnStyleEven}\r\n          onClick={handleClear}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color:\r\n            props.darkMode === \"dark\" || props.moonlitMode === \"dark\"\r\n              ? \"white\"\r\n              : \"black\",\r\n        }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <b>\r\n          <p>\r\n            {text.split(\" \").length} Words and {text.length} characters.\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes are reqired to read.</p>\r\n        </b>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>\r\n          {capitalize(props.alert.type)}: {props.alert.message}\r\n        </strong>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const toggleDarkMode = () => {\n    if (darkMode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"#232526\";\n      showAlert(\"Dark Mode Enabled...\", \"success\");\n      // setInterval(() => {\n      //   document.title = \"TextUtile - Dark Mode\";\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtile now\";\n      // }, 1500);\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark Mode Disabled...\", \"success\");\n    }\n  };\n  const toggleMoonlitMode = () => {\n    if (moonlitMode === \"light\") {\n      setMoonlitMode(\"dark\");\n      document.body.style.backgroundColor = \"#203A43\";\n      showAlert(\"Moonlit Astroid Mode Enabled...\", \"success\");\n    } else {\n      setMoonlitMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Moonlit Astroid Mode Disabled...\", \"success\");\n    }\n  };\n\n  const [darkMode, setDarkMode] = useState(\"light\");\n  const [moonlitMode, setMoonlitMode] = useState(\"light\");\n  const [alert, setAert] = useState(null);\n  const showAlert = (message, type) => {\n    setAert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAert(null);\n    }, 3000);\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About\"\n        darkMode={darkMode}\n        moonlitMode={moonlitMode}\n        toggleDarkMode={toggleDarkMode}\n        toggleMoonlitMode={toggleMoonlitMode}\n      />\n      <Alert alert={alert} />\n      {/* \n        Exact/Partial Matching \n        /user --> component 1\n        /user/home --> component 2\n         */}\n      {/* <Switch> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextForm\n        heading=\"Enter Text to Analysis\"\n        darkMode={darkMode}\n        moonlitMode={moonlitMode}\n        showAlert={showAlert}\n      />\n      {/* </Route> */}\n      {/* // <Route exact path=\"/about\"> */}\n      {/* // <About darkMode={darkMode} moonlitMode={moonlitMode} /> */}\n      {/* // </Route> */}\n      {/* // </Switch> */}\n      {/* // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}